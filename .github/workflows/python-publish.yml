# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: publish

on:
    push:
        branches:
            - master

permissions:
    contents: read

jobs:
    bump-version:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, 'Bump version')"
        steps:
            - uses: actions/checkout@v2
              with:
                  # This is a Personal Acess Token for your github account can be created from the link below
                  # https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token
                  token: ${{ secrets.PAT }} # This is a Personal Acess Token from

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.x"

            - name: Setup Git
              run: |
                  git config user.name "scottydelta"
                  git config user.email 'scottydelta@users.noreply.github.com'
                  git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/scottydelta/esq
                  git checkout master
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install -r requirements_dev.txt
                  
            - name: build docs
              run: |
                  cd docs && make html
                  git add . && git commit -m "updated docs build"
                  
            - name: Bump Patch Version
              env:
                  COMMIT_MSG: ${{ github.event.head_commit.message }}
              run: |
                  bump2version --current-version $(python setup.py --version ) patch setup.py
              
            - name: Commit version change to master - Push
              # Skip CI tag is import below otherwise it would trigger continous version bumps
              run: |
                  git push
                  

    deploy:
        runs-on: ubuntu-latest
        if: "contains(github.event.head_commit.message, 'Bump version')"
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python
              uses: actions/setup-python@v3
              with:
                  python-version: "3.x"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install build
            - name: Build package
              run: python -m build
            - name: Publish package
              uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
              with:
                  user: __token__
                  password: ${{ secrets.PYPI_API_TOKEN }}
